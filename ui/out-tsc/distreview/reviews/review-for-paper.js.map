{"version":3,"file":"review-for-paper.js","sourceRoot":"","sources":["../../../src/distreview/reviews/review-for-paper.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAEnE,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AACrE,OAAO,iCAAiC,CAAC;AACzC,OAAO,iBAAiB,CAAC;AAGlB,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,UAAU;IAc5C,KAAK,CAAC,YAAY;QAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,YAAY,CAAE,CAAC;QAEhG,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC/C,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,sBAAsB;YAC/B,OAAO,EAAE,IAAI,CAAC,UAAU;YACxB,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO,IAAI,CAAA;;aAEJ,CAAC;SACT;QACD,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CACtB,IAAI,CAAA,8BAA8B,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,gDAAgD,CAC9G;;KAEJ,CAAC;IACJ,CAAC;CACF,CAAA;AAtCC;IADC,QAAQ,EAAE;kDACa;AAGxB;IADC,KAAK,EAAE;gDAC4B;AAGpC;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;oDACtB;AAG5B;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;+CAClB;AAZhB,cAAc;IAD1B,aAAa,CAAC,kBAAkB,CAAC;GACrB,cAAc,CAyC1B;SAzCY,cAAc","sourcesContent":["import { LitElement, html } from 'lit';\nimport { state, property, customElement } from 'lit/decorators.js';\nimport { InstalledCell, AgentPubKey, ActionHash, Record, AppWebsocket, InstalledAppInfo } from '@holochain/client';\nimport { contextProvided } from '@lit-labs/context';\nimport { appWebsocketContext, appInfoContext } from '../../contexts';\nimport '@material/mwc-circular-progress';\nimport './review-detail';\n\n@customElement('review-for-paper')\nexport class ReviewForPaper extends LitElement {\n\n  @property()\n  actionHash!: ActionHash; \n\n  @state()\n  _records: Array<Record> | undefined;\n\n  @contextProvided({ context: appWebsocketContext })\n  appWebsocket!: AppWebsocket;\n\n  @contextProvided({ context: appInfoContext })\n  appInfo!: InstalledAppInfo;\n\n  async firstUpdated() {\n    const cellData = this.appInfo.cell_data.find((c: InstalledCell) => c.role_id === 'distreview')!;\n\n    this._records = await this.appWebsocket.callZome({\n      cap_secret: null,\n      cell_id: cellData.cell_id,\n      zome_name: 'reviews',\n      fn_name: 'get_review_for_paper',\n      payload: this.actionHash,\n      provenance: cellData.cell_id[1]\n    });\n  }\n\n  render() {\n    if (!this._records) {\n      return html`<div style=\"display: flex; flex: 1; align-items: center; justify-content: center\">\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\n      </div>`;\n    }\n    return html`\n      <div style=\"display: flex; flex-direction: column\">\n        ${this._records.map(r => \n          html`<review-detail .actionHash=${r.signed_action.hashed.hash} style=\"margin-bottom: 16px;\"></review-detail>`\n        )}\n      </div>\n    `;\n  }\n}\n"]}