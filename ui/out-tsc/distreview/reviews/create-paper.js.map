{"version":3,"file":"create-paper.js","sourceRoot":"","sources":["../../../src/distreview/reviews/create-paper.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAEzD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAErE,OAAO,sBAAsB,CAAC;AAC9B,OAAO,yBAAyB,CAAC;AAI1B,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;IAApC;;QAGL,aAAQ,GAAW,EAAE,CAAC;QAGtB,WAAM,GAAW,EAAE,CAAC;QAGrB,SAAI,GAAW,EAAE,CAAC;IAuDnB,CAAC;IArDC,YAAY;QACV,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC;IACtC,CAAC;IAQD,KAAK,CAAC,WAAW;QACf,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAgB,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,YAAY,CAAE,CAAC;QAEhG,MAAM,KAAK,GAAU;YACnB,OAAO,EAAE,CAAC,IAAI,CAAC,QAAS,CAAC;YACzB,KAAK,EAAE,IAAI,CAAC,MAAO;YACnB,GAAG,EAAE,IAAI,CAAC,IAAI;SACf,CAAC;QAEF,MAAM,MAAM,GAAW,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YACtD,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,SAAS,EAAE,SAAS;YACpB,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,KAAK;YACd,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,EAAE;YAClD,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;YACb,MAAM,EAAE;gBACN,UAAU,EAAE,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI;aAC7C;SACF,CAAC,CAAC,CAAC;IACN,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;8EAI+D,CAAC,CAAc,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAI,CAAC,CAAC,MAAc,CAAC,KAAK,CAAC,CAAC,CAAE;6EAClE,CAAC,CAAc,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,GAAI,CAAC,CAAC,MAAc,CAAC,KAAK,CAAC,CAAC,CAAE;2EACjE,CAAC,CAAc,EAAE,EAAE,GAAG,IAAI,CAAC,IAAI,GAAI,CAAC,CAAC,MAAc,CAAC,KAAK,CAAC,CAAC,CAAE;;;;sBAIlH,CAAC,IAAI,CAAC,YAAY,EAAE;mBACvB,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE;;WAEhC,CAAC;IACV,CAAC;CACF,CAAA;AA7DC;IADC,KAAK,EAAE;6CACc;AAGtB;IADC,KAAK,EAAE;2CACY;AAGrB;IADC,KAAK,EAAE;yCACU;AAOjB;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;iDACtB;AAG5B;IADC,eAAe,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;4CAClB;AAnBhB,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CAgEvB;SAhEY,WAAW","sourcesContent":["import { LitElement, html } from 'lit';\nimport { state, customElement } from 'lit/decorators.js';\nimport { InstalledCell, ActionHash, Record, AppWebsocket, InstalledAppInfo } from '@holochain/client';\nimport { contextProvided } from '@lit-labs/context';\nimport { appWebsocketContext, appInfoContext } from '../../contexts';\nimport { Paper } from './paper';\nimport '@material/mwc-button';\nimport '@material/mwc-textfield';\n\n\n@customElement('create-paper')\nexport class CreatePaper extends LitElement {\n\n  @state()\n  _authors: string = \"\";\n\n  @state()\n  _title: string = \"\";\n\n @state()\n _doi: string = \"\";\n\n  isPaperValid() {\n    return this._authors && this._title;\n  }\n\n  @contextProvided({ context: appWebsocketContext })\n  appWebsocket!: AppWebsocket;\n\n  @contextProvided({ context: appInfoContext })\n  appInfo!: InstalledAppInfo;\n\n  async createPaper() {\n    const cellData = this.appInfo.cell_data.find((c: InstalledCell) => c.role_id === 'distreview')!;\n\n    const paper: Paper = {\n      authors: [this._authors!],\n      title: this._title!,\n      doi: this._doi,\n    };\n\n    const record: Record = await this.appWebsocket.callZome({\n      cap_secret: null,\n      cell_id: cellData.cell_id,\n      zome_name: 'reviews',\n      fn_name: 'create_paper',\n      payload: paper,\n      provenance: cellData.cell_id[1]\n    });\n\n    this.dispatchEvent(new CustomEvent('paper-created', {\n      composed: true,\n      bubbles: true,\n      detail: {\n        actionHash: record.signed_action.hashed.hash\n      }\n    }));\n  }\n\n  render() {\n    return html`\n      <div style=\"display: flex; flex-direction: column\">\n        <span style=\"font-size: 18px\">Create Paper</span>\n\n          <mwc-textfield style=\"margin: 5px\" outlined label=\"author\" @input=${(e: CustomEvent) => { this._authors = (e.target as any).value; } }></mwc-textfield>\n          <mwc-textfield style=\"margin: 5px\" outlined label=\"title\" @input=${(e: CustomEvent) => { this._title = (e.target as any).value; } }></mwc-textfield>\n          <mwc-textfield style=\"margin: 5px\" outlined label=\"doi\" @input=${(e: CustomEvent) => { this._doi = (e.target as any).value; } }></mwc-textfield>\n\n        <mwc-button\n          label=\"Create Paper\"\n          .disabled=${!this.isPaperValid()}\n          @click=${() => this.createPaper()}\n        ></mwc-button>\n    </div>`;\n  }\n}\n"]}